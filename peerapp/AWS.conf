# Its assumend that user has already created an AWSIoT Thing for the mesh gateway and have also created and loaded the credentials and thing name into the mesh gateway application.
# Android MeshController uses Amazon Cognito to connect to mesh gateway
# Amazon Cognito is an Amazon Web Services (AWS) product that controls user authentication and access for mobile applications on internet-connected devices
# Please refer to the following link for more details : https://docs.aws.amazon.com/cognito/latest/developerguide/what-is-amazon-cognito.html
# For Android MeshController to connect to mesh gateway, user will need to provide CustomerSpecificEndPoint and CognitoPoolId

# To load CustomerSpecificEndPoint and CognitoPool Id, please follow the below steps. 
# 1. Copy AWS.conf file to store it in the internal shared storage of the android phone 
# i.e when you connect a pixel 2 on windows PC you shall see the pixel2 device in "This PC" of your windows10 machine , place the file in the "internal shared storage"
# 2. To obtain CustomerSpecificEndPoint, login into AWSIoT go to "IoT core" click on settings, once you click on setting you shall be able to see a custom end point as shown below
# please replace the xxxx string with the appropriate string shown in your account 

CustomerSpecificEndPoint=xxxxx-ats.iot.us-east-1.amazonaws.com

# 3. To create CognitoPoolId go to AWS Serices -> cognito and click on "manage identity pool" and create a idenity pool,
# provide an appropriate name and also enable "Enable access to unauthenticated identities"
# 4. To view the Identity Pool ID ,click on sample code and you shall see an example class as below
# Initialize the Amazon Cognito credentials provider
# CognitoCachingCredentialsProvider credentialsProvider = new CognitoCachingCredentialsProvider(
#    getApplicationContext(),
#    "us-east-1:7fbf47af-0be6-4a51-bd93-xxxxxx", // Identity pool ID
#   Regions.US_EAST_1 // Region
# )

CognitoPoolId=us-east-1:7fbf47af-0be6-4a51-bd93-xxxxxx

